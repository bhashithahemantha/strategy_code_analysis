
--------------------STRATEGY CODE--------------------

{---------------------------------------------------------------------------
----
 Trading Strategy Code
 Population member: 5251
 Max bars back: 30

 Created by: Adaptrade Builder version 2.4.0.0
 Created:    3/16/2018 5:34:42 PM

 Scripting language: TradeStation 6 or newer

 Symbol file:  C:\Users\gen_nt1\Desktop\CL\CLdaily.txt
 Build dates: 5/31/2007 to 10/25/2010

 Project file: C:\Program Files\Adaptrade Software\Adaptrade Builder
2.4.0\BuilderProject
----------------------------------------------------------------------------
---}

{ Strategy inputs }
Inputs: NBarEn1 (74),    { Indicator look-back length (bars) }
        NATREn (30),     { Indicator look-back length (bars) }
        EntFr (1.2111),  { Multiple of price difference (e.g., ATR); entry
}
        NBarEx1 (9),     { Number of bars from entry for market exit }
        PSParam (1.00),  { Position sizing parameter value }
        RoundPS (true),  { Round-to-nearest (true/false) }
        RoundTo (1),     { Round-to position size value }
        MinSize (1),     { Minimum allowable position size }
        SizeLimit (100); { Maximum allowable position size }

{ Variables for average true range for entry and exit orders }
Var:    ATREn (0);

{ Variables for entry and exit prices }
Var:    EntPrL   (0),
        EntPrS   (0);

{ Variables for entry and exit conditions }
Var:    EntCondL  (false),
        EntCondS  (false),
        EndofSess (false);

{ Variables for position sizing }
Var:    NShares  (0);

{ Average true range }
ATREn = AvgTrueRange(NATREn);

{ Entry prices }
EntPrL = ZLTrend(L, NBarEn1) + EntFr * ATREn;
EntPrS = ZLTrend(H, NBarEn1) - EntFr * ATREn;

{ Entry and exit conditions }
EntCondL = true;
EntCondS = true;

EndofSess = false;
If DataCompression >= 1 and DataCompression <= 4 then
    EndofSess = (Time = SessionEndTime(0, 1));

{ Position sizing calculations }
NShares = PSParam;

If RoundPS and RoundTo > 0 then
    NShares = IntPortion(NShares/RoundTo) * RoundTo;

NShares = MaxList(NShares, MinSize);
NShares = MinList(NShares, SizeLimit);

{ Entry orders }
If MarketPosition = 0 and (EntriesToday(Date) < 1 or EndofSess) and
EntCondL then begin
    Buy("EnStop-L") NShares shares next bar at EntPrL stop;
end;

If MarketPosition = 0 and (EntriesToday(Date) < 1 or EndofSess) and
EntCondS then begin
    Sell short("EnStop-S") NShares shares next bar at EntPrS stop;
end;

{ Exit orders, long trades }
If MarketPosition = 1 then begin
    If BarsSinceEntry >= NBarEx1 then
        Sell("ExMark-L") next bar at market;
end;

{ Exit orders, short trades }
If MarketPosition = -1 then begin
    If BarsSinceEntry >= NBarEx1 then
        Buy to cover("ExMark-S") next bar at market;
end;


